"""
Django settings for BookBear project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from datetime import timedelta
from distutils.util import strtobool
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@rg+mfpp+diyoyb3#*0@hzi2(nk6@mf5v_sy_2kf4@8y3&w$2x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'BookBearApi',
    'ninja_extra',
    'dj_ninja_auth',
    'dj_ninja_auth.jwt'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BookBear.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BookBear.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'BookBearApi.User'

AUTH_JWT_ACCESS_TOKEN_LIFETIME = timedelta(
    minutes=int(os.getenv('AUTH_JWT_ACCESS_TOKEN_LIFETIME', '5'))
)
AUTH_JWT_REFRESH_TOKEN_LIFETIME = timedelta(
    days=int(os.getenv('AUTH_JWT_REFRESH_TOKEN_LIFETIME', '1'))
)

SECURE_REFRESH_TOKEN = bool(
    strtobool(os.getenv('SECURE_REFRESH_TOKEN', 'false'))
)
REFRESH_TOKEN_ON_COOKIE = bool(
    strtobool(os.getenv('REFRESH_TOKEN_ON_COOKIE', 'false'))
)
REFRESH_TOKEN_COOKIE_SAMESITE = os.getenv(
    'REFRESH_TOKEN_COOKIE_SAMESITE', 'None'
)
REFRESH_TOKEN_COOKIE_SECURE = bool(
    strtobool(os.getenv('REFRESH_TOKEN_COOKIE_SECURE', 'true'))
)

AUTH_PASSWORD_RESET_URL = os.getenv(
    'AUTH_PASSWORD_RESET_URL',
    "http://localhost:8000/auth/reset-password"
)
AUTH_USER_SCHEMA = os.getenv(
    'AUTH_USER_SCHEMA',
    'conexao_digital_api.schemas.user_schemas.UserSchema'
)

if REFRESH_TOKEN_ON_COOKIE:
    AUTH_JWT_PAIR_SCHEMA = os.getenv(
        'AUTH_JWT_PAIR_SCHEMA',
        'conexao_digital_api.schemas.user_schemas.CustomTokenPairInputSchema'
    )

EMAIL_BACKEND = os.getenv(
    'EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend'
)
EMAIL_HOST = os.getenv('EMAIL_HOST', '')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', '25'))
EMAIL_USE_TLS = bool(strtobool(os.getenv('EMAIL_USE_TLS', 'false')))
EMAIL_USE_SSL = bool(strtobool(os.getenv('EMAIL_USE_SSL', 'false')))
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'dev@dev.com')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'dev')